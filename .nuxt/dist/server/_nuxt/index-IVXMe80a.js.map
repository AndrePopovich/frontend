{"version":3,"file":"index-IVXMe80a.js","sources":["../../../../pages/profile/admin/users/index.vue"],"sourcesContent":["<template>\n    <div class=\"bg-gray-900 h-screen p-5\">\n        <h1 class=\"big-center-text white\">Користувачі</h1>\n        <div v-if=\"users\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div v-for=\"user in users\" :key=\"user.id\" class=\"bg-white rounded-lg shadow-lg p-6\">\n                <div>\n                    <p class=\"font-semibold text-center\">ID: {{ user.id }}</p>\n                    <p class=\"font-semibold\">Ім'я: {{ user.firstName }}</p>\n                    <p class=\"font-semibold\">Прізвище: {{ user.lastName }}</p>\n                    <p class=\"font-semibold\">Електрона пошта: {{ user.email }}</p>\n                    <p class=\"font-semibold\">Номер телефону: {{ user.phone }}</p>\n                    <p class=\"font-semibold\">Дата реєстрації: {{ user.dateOfRegistration }}</p>\n                </div>\n                <div v-if=\"user.id !== myId\" class=\"mt-4\">\n                    <button @click.prevent=\"deleteUser(user.id)\" class=\"red-button\">Видалити</button>\n                </div>\n                <div v-else class=\"mt-4\">\n                    <p class=\"font-semibold\">Це адмін</p>\n                </div>\n            </div>\n\n        </div>\n        <div v-else>\n            <p>Ви не ввійшли в акаунт</p>\n            <nuxt-link to=\"/auth/\">Ввійти</nuxt-link>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'; // Імпортуємо ref для створення реактивної змінної\nimport { fetchWithToken, getMyId } from '/utils/auth.js';\n\n// Створюємо реактивну змінну для даних користувача\nconst users = ref([]);\nconst myId = ref(null);\nconst deleteUser = async (id) => {\n    try {\n        const apiUrlDeleteWithId = 'https://buy-sell-api.onrender.com/api/admin/users/' + id;\n        await fetchWithToken(apiUrlDeleteWithId, {\n            method: 'DELETE'\n        })\n        console.log(\"Видалено!!!\")\n        await loadData();\n    } catch (error) {\n        console.error('Помилка при зміні сторінки:', error);\n    }\n}\n// Функція для отримання даних користувача та оновлення userData\nasync function loadData() {\n    try {\n        myId.value = getMyId();\n        const response = await fetchWithToken('https://buy-sell-api.onrender.com/api/admin/users');\n        console.log('Отримані дані:', response);\n        if (response.ok) {\n            const data = await response.json(); // Отримуємо дані у форматі JSON\n            console.log('Дані користувача:', data);\n            console.log('My Id:', myId.value);\n            users.value = data; // Оновлюємо значення userData\n        } else {\n            console.error('Помилка при отриманні даних:', response.statusText);\n        }\n    } catch (error) {\n        console.error('Помилка при отриманні даних:', error);\n    }\n}\n\nonMounted(() => {\n    loadData();\n})\ndefinePageMeta({\n    layout: 'admin'\n})\n</script>\n\n<style scoped>\n.white {\n    color: white;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,QAAQ,IAAI,CAAA,CAAE;AACpB,UAAM,OAAO,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}