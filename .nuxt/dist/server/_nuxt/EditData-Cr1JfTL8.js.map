{"version":3,"file":"EditData-Cr1JfTL8.js","sources":["../../../../utils/auth.js","../../../../components/admin/EditData.vue"],"sourcesContent":["export const setTokenInLocalStorage = (token) => {\n    localStorage.setItem('jwtToken', token);\n};\n\nexport const getTokenFromLocalStorage = () => {\n    return localStorage.getItem('jwtToken');\n};\nexport const isAuthenticated = () => {\n    if (localStorage.getItem('jwtToken')) {\n        return true;\n    } else {\n        false;\n    }\n};\nexport async function saveProfile() {\n    const response = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/profile');\n    if (response.ok) {\n        const profile = await response.json();\n        setProfileInLocalStorage(profile);\n        console.log('Успішно збережено профіль:', profile);\n    } else {\n        console.error('Помилка при збережені акаунта:', response.statusText);\n    }\n}\n\n// Збереження об'єкта профілю в локальному сховищі\nexport const setProfileInLocalStorage = (profile) => {\n    localStorage.setItem('profile', JSON.stringify(profile));\n}\n\n// Отримання об'єкта профілю з локального сховища\nexport const getProfileFromLocalStorage = () => {\n    const profileString = localStorage.getItem('profile');\n    return JSON.parse(profileString);\n}\nexport const getMyId = () => {\n    const profile = getProfileFromLocalStorage();\n    return profile.id;\n}\n\nexport const setEditObjectInLocalStorage = (editObject) => {\n    localStorage.setItem('editObject', JSON.stringify(editObject));\n}\n\nexport const getEditObjectFromLocalStorage = () => {\n    const editObjectString = localStorage.getItem('editObject');\n    return JSON.parse(editObjectString);\n}\n\nexport const fetchWithToken = async (url, options = {}) => {\n    const token = getTokenFromLocalStorage();\n    if (token) {\n        options.headers = {\n            ...options.headers,\n            Authorization: `Bearer ${token}`,\n        };\n    } else {\n        console.log('Ввійдіть в акаунт')\n    }\n    if (options.method === 'POST' || options.method === 'PUT') {\n        options.headers = {\n            ...options.headers,\n            'Content-Type': 'application/json', // Встановлюємо заголовок Content-Type\n\n        };\n        //options.body = JSON.stringify(options.body); // Конвертуємо тіло запиту в JSON\n    } else if (options.method === 'DELETE') {\n        options.method = 'DELETE'; // Встановлюємо метод DELETE\n    }\n    return await fetch(url, options);\n};\n\n\n","<template>\n    <div class=\"bg-white p-8 rounded-lg shadow-lg mx-4\">\n        <div v-if=\"object\">\n            <h2 class=\"text-center text-xl font-semibold mb-4\">Редагувати {{ objectName }}</h2>\n            <input type=\"text\" v-model=\"nameObject\" placeholder=\"Введіть назву\"\n                class=\"block w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500\">\n            <button @click.prevent=\"editData\" class=\"green-button block mx-auto mt-4\">Змінити назву {{ objectName\n                }}</button>\n            <nuxt-link :to=\"backUrl\" class=\"block btn-admin mt-4\">\n                Назад\n            </nuxt-link>\n        </div>\n        <div v-else>\n            <p>Помилка!!!</p>\n            <nuxt-link :to=\"backUrl\" class=\"btn-admin mt-4\">Повернутись назад</nuxt-link>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\nimport { ref } from 'vue';\nimport { fetchWithToken } from '/utils/auth.js';\nimport { useRouter } from 'vue-router';\nconst router = useRouter();\nconst props = defineProps({\n    object: {\n        type: Object,\n        required: true\n    },\n    apiUrlEdit: {\n        type: String,\n        required: true\n    },\n    backUrl: {\n        type: String,\n        required: true\n    },\n    objectName: {\n        type: String,\n        required: true\n    }\n})\nconst nameObject = ref(props.object.name)\n\nconst editData = async (object) => {\n    const requestData = {\n        id: props.object.id,\n        name: nameObject.value,\n    }\n    console.log('REQUEST: ', JSON.stringify(requestData))\n    fetchWithToken(props.apiUrlEdit, {\n        method: 'PUT',\n        body: JSON.stringify(requestData)\n    });\n    await localStorage.removeItem('editObject');\n    router.push(props.backUrl);\n}\n</script>\n\n<style scoped></style>\n"],"names":[],"mappings":";;;;AA4CY,MAAC,gCAAgC,MAAM;AAC/C,QAAM,mBAAmB,aAAa,QAAQ,YAAY;AAC1D,SAAO,KAAK,MAAM,gBAAgB;AACtC;;;;;;;;;;;;;;;;;;;;;;;ACvBe,cAAY;AAC3B,UAAM,QAAQ;AAkBd,UAAM,aAAa,IAAI,MAAM,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}