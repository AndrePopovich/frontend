{"version":3,"file":"add-CniTEBZY.js","sources":["../../../../pages/profile/user/ads/add.vue"],"sourcesContent":["<template>\n    <div class=\"bg-gradient-to-b from-gray-200 to-gray-100 min-h-screen py-8 px-4\">\n        <form @submit.prevent=\"submitForm\" enctype=\"multipart/form-data\" method=\"post\"\n            class=\"max-w-lg mx-auto bg-white p-8 rounded-lg shadow-md\">\n            <div class=\"mb-4\">\n                <p class=\"big-center-text\">Створіть оголошення</p>\n            </div>\n            <div class=\"mb-4\">\n                <input type=\"text\" placeholder=\"Введіть назву\" v-model=\"name\" class=\"input-field\" minlength=\"10\"\n                    maxlength=\"100\">\n                <span v-if=\"nameError\" class=\"text-red-500 text-xs\">{{ nameError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <textarea placeholder=\"Опишіть оголошення\" v-model=\"description\" class=\"input-field-textarea\"\n                    minlength=\"10\" maxlength=\"300\"></textarea>\n                <span v-if=\"descriptionError\" class=\"text-red-500 text-xs\">{{ descriptionError }}</span>\n            </div>\n\n            <div class=\"mb-4\">\n                <input list=\"categories\" v-model=\"selectedCategory\" placeholder=\"Виберіть категорію\"\n                    class=\"input-field\">\n                <datalist id=\"categories\">\n                    <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.name\">{{ category.name }}\n                    </option>\n                </datalist>\n                <span v-if=\"selectedCategoryError\" class=\"text-red-500 text-xs\">{{ selectedCategoryError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <input list=\"cities\" v-model=\"selectedCity\" placeholder=\"Виберіть місто\" class=\"input-field\">\n                <datalist id=\"cities\">\n                    <option v-for=\"city in cities\" :key=\"city.id\" :value=\"city.name\">{{ city.name }}</option>\n                </datalist>\n                <span v-if=\"selectedCityError\" class=\"text-red-500 text-xs\">{{ selectedCityError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <input type=\"number\" placeholder=\"Введіть ціну\" v-model.number=\"price\" min=\"0\" class=\"input-field\">\n                <span v-if=\"priceError\" class=\"text-red-500 text-xs\">{{ priceError }}</span>\n            </div>\n\n            <span v-if=\"imagesError\" class=\"text-red-500 text-xs text-center\">{{ imagesError }}</span>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 0)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[0] && filePreviews[0]\" :src=\"filePreviews[0]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 1\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 1)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[1] && filePreviews[1]\" :src=\"filePreviews[1]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 2\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 2)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[2] && filePreviews[2]\" :src=\"filePreviews[2]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 3\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 3)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[3] && filePreviews[3]\" :src=\"filePreviews[3]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 4\">\n            </div>\n            <div class=\"flex justify-between items-center mb-8\">\n                <nuxt-link to=\"/profile/user/ads\" class=\"red-button\">Назад</nuxt-link>\n                <button type=\"submit\" class=\"btn-admin\">Подати оголошення</button>\n            </div>\n\n        </form>\n    </div>\n\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { fetchWithToken, isAuthenticated, getProfileFromLocalStorage, getTokenFromLocalStorage, saveProfile } from '/utils/auth.js';\nimport { useRouter } from 'vue-router'\n\n// Остаточний URL для запитів\nconst referal = 'https://buy-sell-api.onrender.com/api/user/ads';\nconst router = useRouter();\n// Змінні для зберігання даних форми\nconst name = ref(\"\");\nconst description = ref(\"\");\nconst user = ref(null);\nconst selectedCategory = ref(null); // Зберігаємо лише ідентифікатор категорії\nconst selectedCity = ref(null); // Зберігаємо лише ідентифікатор міста\nconst price = ref(0);\nconst views = ref(0);\nconst files = ref([]);\nconst categories = ref([]);\nconst cities = ref([]);\nconst token = ref(null);\n\n//Errors\nconst nameError = ref('');\nconst descriptionError = ref('');\nconst selectedCategoryError = ref(null);\nconst selectedCityError = ref(null);\nconst priceError = ref(0);\nconst imagesError = ref('');\n\nconst filePreviews = ref([])\nconst handleFileUpload = (event, id) => {\n    const filesEvent = event.target.files; // Отримати список файлів з об'єкта event\n    if (filesEvent && filesEvent.length > 0) { // Перевірити, чи містить files файли\n        const file = filesEvent[0];\n        if (file.type === 'image/png' || file.type === 'image/jpeg') {\n            const blob = new Blob([file], { type: file.type });\n            filePreviews.value[id] = URL.createObjectURL(blob);\n            files.value[id] = file;\n            imagesError.value = '';\n        } else {\n            imagesError.value = 'Неприпустимий тип файлу!';\n            // Очистити значення у списку файлів та прев'ю\n            filePreviews.value[id] = null;\n            files.value[id] = null;\n            // Очистити поле вибору файлу\n            event.target.value = null;\n        }\n    }\n    files.value.forEach(file => {\n        console.log(file);\n    });\n}\n\n\n// Функція для завантаження даних\nasync function loadData() {\n    token.value = await getTokenFromLocalStorage();\n    user.value = getProfileFromLocalStorage();\n\n    const categoriesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/categories');\n    const citiesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/cities');\n\n    categories.value = await categoriesResponse.json();\n    cities.value = await citiesResponse.json();\n}\n\nconst findCityIdByName = (cityName) => {\n    const city = cities.value.find(city => city.name === cityName);\n    return city ? city.id : null;\n}\nconst findCategoryIdByName = (categoryName) => {\n    const category = categories.value.find(category => category.name === categoryName);\n    return category ? category.id : null;\n}\n\nconst submitForm = async () => {\n    await clearErrors();\n    const isValid = await validateForm();\n    if (isValid) {\n        const formData = new FormData();\n        formData.append('name', name.value);\n        formData.append('description', description.value);\n        formData.append('user', user.value.id);\n        formData.append('category', findCategoryIdByName(selectedCategory.value));\n        formData.append('city', findCityIdByName(selectedCity.value));\n        formData.append('price', price.value);\n        formData.append('views', views.value);\n        files.value.forEach((file, index) => {\n            formData.append(`file${index + 1}`, file);\n        });\n\n        const hasName = formData.has('name');\n        console.log('Дані з іменем \"name\" існують:', hasName); // Виведе: true\n        // Додаємо файл до formData\n        //formData.append('file', file.value);\n\n        try {\n            const response = await fetch(referal, {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: `Bearer ${token.value}`\n                }\n            });\n            if (response.ok) {\n                console.log('Ad added successfully');\n                await saveProfile();\n                router.push('/profile/user/ads');\n            } else {\n                console.error('Failed to add ad');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n}\nasync function validateForm() {\n    if (name.value.length < 10 || name.value.length > 100) {\n        nameError.value = \"Ім'я повинно містити від 10 до 100 символів!\";\n        return false;\n    }\n    if (description.value.length < 10 || description.value.length > 500) {\n        descriptionError.value = \"Опис повинен містити від 10 до 500 символів!\";\n        return false;\n    }\n    if (selectedCategory.value === null) {\n        selectedCategoryError.value = \"Виберіть категорію!\";\n        return false;\n    }\n    const isExistCategory = await isExistName(selectedCategory.value.trim(), categories.value);\n    if (!isExistCategory) {\n        selectedCategoryError.value = \"Такої категорії немає!\";\n        return false;\n    }\n\n    if (selectedCity.value === null) {\n        selectedCityError.value = \"Виберіть місто!\";\n        return false;\n    }\n    const isExistCity = await isExistName(selectedCity.value.trim(), cities.value);\n    if (!isExistCity) {\n        selectedCityError.value = \"Такого міста немає!\";\n        return false;\n    }\n\n    const priceValue = parseFloat(price.value);\n    if (isNaN(priceValue) || priceValue < 1 || priceValue > 1000000) {\n        priceError.value = \"Ціна повинна бути числом від 1 до 1000000!\";\n        return false;\n    }\n\n    if (!files.value.some(file => file !== null)) {\n        imagesError.value = \"Додайте хочаб одне фото!\";\n        return false;\n    }\n\n\n    return true;\n}\n\nasync function clearErrors() {\n    nameError.value = '';\n    descriptionError.value = '';\n    selectedCategoryError.value = '';\n    selectedCityError.value = '';\n    priceError.value = '';\n    imagesError.value = '';\n}\nasync function isExistName(name, array) {\n    for (const object of array) {\n        if (typeof object.name === 'string' && object.name === name) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n// Завантажуємо дані при монтуванні компонента\nonMounted(() => {\n    if (!isAuthenticated()) {\n        router.push('/auth/');\n    }\n    loadData();\n});\n</script>\n\n<style scoped></style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAiFe,cAAY;AAE3B,UAAM,OAAO,IAAI,EAAE;AACnB,UAAM,cAAc,IAAI,EAAE;AACb,QAAI,IAAI;AACrB,UAAM,mBAAmB,IAAI,IAAI;AACjC,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,QAAQ,IAAI,CAAC;AACL,QAAI,CAAC;AACnB,UAAM,QAAQ,IAAI,CAAA,CAAE;AACpB,UAAM,aAAa,IAAI,CAAA,CAAE;AACzB,UAAM,SAAS,IAAI,CAAA,CAAE;AACP,QAAI,IAAI;AAGtB,UAAM,YAAY,IAAI,EAAE;AACxB,UAAM,mBAAmB,IAAI,EAAE;AAC/B,UAAM,wBAAwB,IAAI,IAAI;AACtC,UAAM,oBAAoB,IAAI,IAAI;AAClC,UAAM,aAAa,IAAI,CAAC;AACxB,UAAM,cAAc,IAAI,EAAE;AAE1B,UAAM,eAAe,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}