{"version":3,"file":"ListData-BsN6Rn4h.js","sources":["../../../../components/admin/ListData.vue"],"sourcesContent":["<template>\n    <div class=\"bg-gray-900 min-h-screen flex justify-center p-4\">\n        <div>\n            <h2 class=\"text-2xl font-bold text-center text-white mb-4\">{{ props.nameObjectText }}</h2>\n            <div v-if=\"objects && objects.length > 0\"\n                class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-5\">\n                <div v-for=\"(object, index) in objects\" :key=\"index\"\n                    class=\"bg-white rounded-lg shadow-lg p-6 text-center\">\n                    <p class=\"font-bold\">{{ object.name }}</p>\n                    <div class=\"mt-4\">\n                        <button @click.prevent=\"editObject(object)\"\n                            class=\"orange-button w-full mb-2\">Редагувати</button>\n                        <button @click.prevent=\"deleteObject(object)\" class=\"red-button w-full\">Видалити</button>\n                    </div>\n                </div>\n            </div>\n            <div v-else>\n                <p class=\"big-center-text text-white\">{{ props.nameObjectText }} не знайдено</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { fetchWithToken, setEditObjectInLocalStorage } from '/utils/auth.js';\nimport { useRouter } from 'vue-router';\nconst router = useRouter();\n\nconst props = defineProps({\n    apiUrl: {\n        type: String,\n        required: true\n    },\n    apiUrlEdit: {\n        type: String,\n        required: true\n    },\n    pathToEdit: {\n        type: String,\n        required: true\n    },\n    apiUrlDelete: {\n        type: String,\n        required: true\n    }\n    ,\n    nameObject: {\n        type: String,\n        required: true\n    },\n    nameObjectText: {\n        type: String,\n        required: true\n    }\n});\nconst objects = ref(null);\n\nasync function loadData() {\n    try {\n        const response = await fetchWithToken(props.apiUrl);\n        console.log('Отримані дані:', response);\n        if (response.ok) {\n            const data = await response.json();\n            console.log(props.nameObject, data)\n            objects.value = data;\n        }\n        console.log('RESPONSE: ', objects.value)\n    } catch (error) {\n        console.error('Помилка завантаження даних:', error);\n    }\n}\nconst editObject = async (object) => {\n    try {\n        const apiUrlEditForBackend = props.apiUrlEdit + object.id\n        const editObject = {\n            id: object.id,\n            name: object.name,\n            apiUrlEdit: apiUrlEditForBackend\n        }\n        setEditObjectInLocalStorage(editObject);\n        router.push(props.pathToEdit);\n    } catch (error) {\n        console.error('Помилка при зміні сторінки:', error);\n    }\n}\nconst deleteObject = async (object) => {\n    try {\n        const apiUrlDeleteWithId = props.apiUrlDelete + object.id;\n        const deleteObject = {\n            id: object.id\n        }\n        await fetchWithToken(apiUrlDeleteWithId, {\n            method: 'DELETE',\n            body: JSON.stringify(deleteObject)\n        })\n        loadData();\n    } catch (error) {\n        console.error('Помилка при зміні сторінки:', error);\n    }\n}\n\nonMounted(() => {\n    loadData();\n});\n</script>\n\n<style scoped></style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Be,cAAY;AAE3B,UAAM,QAAQ;AA2Bd,UAAM,UAAU,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;"}