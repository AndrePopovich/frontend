{
  "resolvedId": "C:/Users/HP GAMING/IdeaProjects/Buysell/frontend/pages/profile/user/ads/add.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <div class=\"bg-gradient-to-b from-gray-200 to-gray-100 min-h-screen py-8 px-4\">\n        <form @submit.prevent=\"submitForm\" enctype=\"multipart/form-data\" method=\"post\"\n            class=\"max-w-lg mx-auto bg-white p-8 rounded-lg shadow-md\">\n            <div class=\"mb-4\">\n                <p class=\"big-center-text\">Створіть оголошення</p>\n            </div>\n            <div class=\"mb-4\">\n                <input type=\"text\" placeholder=\"Введіть назву\" v-model=\"name\" class=\"input-field\" minlength=\"10\"\n                    maxlength=\"100\">\n                <span v-if=\"nameError\" class=\"text-red-500 text-xs\">{{ nameError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <textarea placeholder=\"Опишіть оголошення\" v-model=\"description\" class=\"input-field-textarea\"\n                    minlength=\"10\" maxlength=\"300\"></textarea>\n                <span v-if=\"descriptionError\" class=\"text-red-500 text-xs\">{{ descriptionError }}</span>\n            </div>\n\n            <div class=\"mb-4\">\n                <input list=\"categories\" v-model=\"selectedCategory\" placeholder=\"Виберіть категорію\"\n                    class=\"input-field\">\n                <datalist id=\"categories\">\n                    <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.name\">{{ category.name }}\n                    </option>\n                </datalist>\n                <span v-if=\"selectedCategoryError\" class=\"text-red-500 text-xs\">{{ selectedCategoryError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <input list=\"cities\" v-model=\"selectedCity\" placeholder=\"Виберіть місто\" class=\"input-field\">\n                <datalist id=\"cities\">\n                    <option v-for=\"city in cities\" :key=\"city.id\" :value=\"city.name\">{{ city.name }}</option>\n                </datalist>\n                <span v-if=\"selectedCityError\" class=\"text-red-500 text-xs\">{{ selectedCityError }}</span>\n            </div>\n            <div class=\"mb-4\">\n                <input type=\"number\" placeholder=\"Введіть ціну\" v-model.number=\"price\" min=\"0\" class=\"input-field\">\n                <span v-if=\"priceError\" class=\"text-red-500 text-xs\">{{ priceError }}</span>\n            </div>\n\n            <span v-if=\"imagesError\" class=\"text-red-500 text-xs text-center\">{{ imagesError }}</span>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 0)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[0] && filePreviews[0]\" :src=\"filePreviews[0]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 1\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 1)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[1] && filePreviews[1]\" :src=\"filePreviews[1]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 2\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 2)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[2] && filePreviews[2]\" :src=\"filePreviews[2]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 3\">\n            </div>\n            <div class=\"mb-8\">\n                <input type=\"file\" @change=\"handleFileUpload($event, 3)\" accept=\"image/png, image/jpeg\"\n                    class=\"input-field\">\n                <img v-if=\"files[3] && filePreviews[3]\" :src=\"filePreviews[3]\" class=\"image rounded-center\"\n                    alt=\"Додайте фото 4\">\n            </div>\n            <div class=\"flex justify-between items-center mb-8\">\n                <nuxt-link to=\"/profile/user/ads\" class=\"red-button\">Назад</nuxt-link>\n                <button type=\"submit\" class=\"btn-admin\">Подати оголошення</button>\n            </div>\n\n        </form>\n    </div>\n\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { fetchWithToken, isAuthenticated, getProfileFromLocalStorage, getTokenFromLocalStorage, saveProfile } from '/utils/auth.js';\nimport { useRouter } from 'vue-router'\n\n// Остаточний URL для запитів\nconst referal = 'https://buy-sell-api.onrender.com/api/user/ads';\nconst router = useRouter();\n// Змінні для зберігання даних форми\nconst name = ref(\"\");\nconst description = ref(\"\");\nconst user = ref(null);\nconst selectedCategory = ref(null); // Зберігаємо лише ідентифікатор категорії\nconst selectedCity = ref(null); // Зберігаємо лише ідентифікатор міста\nconst price = ref(0);\nconst views = ref(0);\nconst files = ref([]);\nconst categories = ref([]);\nconst cities = ref([]);\nconst token = ref(null);\n\n//Errors\nconst nameError = ref('');\nconst descriptionError = ref('');\nconst selectedCategoryError = ref(null);\nconst selectedCityError = ref(null);\nconst priceError = ref(0);\nconst imagesError = ref('');\n\nconst filePreviews = ref([])\nconst handleFileUpload = (event, id) => {\n    const filesEvent = event.target.files; // Отримати список файлів з об'єкта event\n    if (filesEvent && filesEvent.length > 0) { // Перевірити, чи містить files файли\n        const file = filesEvent[0];\n        if (file.type === 'image/png' || file.type === 'image/jpeg') {\n            const blob = new Blob([file], { type: file.type });\n            filePreviews.value[id] = URL.createObjectURL(blob);\n            files.value[id] = file;\n            imagesError.value = '';\n        } else {\n            imagesError.value = 'Неприпустимий тип файлу!';\n            // Очистити значення у списку файлів та прев'ю\n            filePreviews.value[id] = null;\n            files.value[id] = null;\n            // Очистити поле вибору файлу\n            event.target.value = null;\n        }\n    }\n    files.value.forEach(file => {\n        console.log(file);\n    });\n}\n\n\n// Функція для завантаження даних\nasync function loadData() {\n    token.value = await getTokenFromLocalStorage();\n    user.value = getProfileFromLocalStorage();\n\n    const categoriesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/categories');\n    const citiesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/cities');\n\n    categories.value = await categoriesResponse.json();\n    cities.value = await citiesResponse.json();\n}\n\nconst findCityIdByName = (cityName) => {\n    const city = cities.value.find(city => city.name === cityName);\n    return city ? city.id : null;\n}\nconst findCategoryIdByName = (categoryName) => {\n    const category = categories.value.find(category => category.name === categoryName);\n    return category ? category.id : null;\n}\n\nconst submitForm = async () => {\n    await clearErrors();\n    const isValid = await validateForm();\n    if (isValid) {\n        const formData = new FormData();\n        formData.append('name', name.value);\n        formData.append('description', description.value);\n        formData.append('user', user.value.id);\n        formData.append('category', findCategoryIdByName(selectedCategory.value));\n        formData.append('city', findCityIdByName(selectedCity.value));\n        formData.append('price', price.value);\n        formData.append('views', views.value);\n        files.value.forEach((file, index) => {\n            formData.append(`file${index + 1}`, file);\n        });\n\n        const hasName = formData.has('name');\n        console.log('Дані з іменем \"name\" існують:', hasName); // Виведе: true\n        // Додаємо файл до formData\n        //formData.append('file', file.value);\n\n        try {\n            const response = await fetch(referal, {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: `Bearer ${token.value}`\n                }\n            });\n            if (response.ok) {\n                console.log('Ad added successfully');\n                await saveProfile();\n                router.push('/profile/user/ads');\n            } else {\n                console.error('Failed to add ad');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n}\nasync function validateForm() {\n    if (name.value.length < 10 || name.value.length > 100) {\n        nameError.value = \"Ім'я повинно містити від 10 до 100 символів!\";\n        return false;\n    }\n    if (description.value.length < 10 || description.value.length > 500) {\n        descriptionError.value = \"Опис повинен містити від 10 до 500 символів!\";\n        return false;\n    }\n    if (selectedCategory.value === null) {\n        selectedCategoryError.value = \"Виберіть категорію!\";\n        return false;\n    }\n    const isExistCategory = await isExistName(selectedCategory.value.trim(), categories.value);\n    if (!isExistCategory) {\n        selectedCategoryError.value = \"Такої категорії немає!\";\n        return false;\n    }\n\n    if (selectedCity.value === null) {\n        selectedCityError.value = \"Виберіть місто!\";\n        return false;\n    }\n    const isExistCity = await isExistName(selectedCity.value.trim(), cities.value);\n    if (!isExistCity) {\n        selectedCityError.value = \"Такого міста немає!\";\n        return false;\n    }\n\n    const priceValue = parseFloat(price.value);\n    if (isNaN(priceValue) || priceValue < 1 || priceValue > 1000000) {\n        priceError.value = \"Ціна повинна бути числом від 1 до 1000000!\";\n        return false;\n    }\n\n    if (!files.value.some(file => file !== null)) {\n        imagesError.value = \"Додайте хочаб одне фото!\";\n        return false;\n    }\n\n\n    return true;\n}\n\nasync function clearErrors() {\n    nameError.value = '';\n    descriptionError.value = '';\n    selectedCategoryError.value = '';\n    selectedCityError.value = '';\n    priceError.value = '';\n    imagesError.value = '';\n}\nasync function isExistName(name, array) {\n    for (const object of array) {\n        if (typeof object.name === 'string' && object.name === name) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n// Завантажуємо дані при монтуванні компонента\nonMounted(() => {\n    if (!isAuthenticated()) {\n        router.push('/auth/');\n    }\n    loadData();\n});\n</script>\n\n<style scoped></style>\n",
      "start": 1713884692587,
      "end": 1713884692950,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"bg-gradient-to-b from-gray-200 to-gray-100 min-h-screen py-8 px-4\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"mb-4\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", { class: \"big-center-text\" }, \"Створіть оголошення\")\n], -1)\nconst _hoisted_3 = { class: \"mb-4\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_5 = { class: \"mb-4\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_7 = { class: \"mb-4\" }\nconst _hoisted_8 = { id: \"categories\" }\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_11 = { class: \"mb-4\" }\nconst _hoisted_12 = { id: \"cities\" }\nconst _hoisted_13 = [\"value\"]\nconst _hoisted_14 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_15 = { class: \"mb-4\" }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_17 = {\n  key: 0,\n  class: \"text-red-500 text-xs text-center\"\n}\nconst _hoisted_18 = { class: \"mb-8\" }\nconst _hoisted_19 = [\"src\"]\nconst _hoisted_20 = { class: \"mb-8\" }\nconst _hoisted_21 = [\"src\"]\nconst _hoisted_22 = { class: \"mb-8\" }\nconst _hoisted_23 = [\"src\"]\nconst _hoisted_24 = { class: \"mb-8\" }\nconst _hoisted_25 = [\"src\"]\nconst _hoisted_26 = { class: \"flex justify-between items-center mb-8\" }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn-admin\"\n}, \"Подати оголошення\", -1)\n\nimport { ref, onMounted } from 'vue';\nimport { fetchWithToken, isAuthenticated, getProfileFromLocalStorage, getTokenFromLocalStorage, saveProfile } from '/utils/auth.js';\nimport { useRouter } from 'vue-router'\n\n// Остаточний URL для запитів\nconst referal = 'https://buy-sell-api.onrender.com/api/user/ads';\n\nconst _sfc_main = {\n  __name: 'add',\n  setup(__props) {\n\nconst router = useRouter();\n// Змінні для зберігання даних форми\nconst name = ref(\"\");\nconst description = ref(\"\");\nconst user = ref(null);\nconst selectedCategory = ref(null); // Зберігаємо лише ідентифікатор категорії\nconst selectedCity = ref(null); // Зберігаємо лише ідентифікатор міста\nconst price = ref(0);\nconst views = ref(0);\nconst files = ref([]);\nconst categories = ref([]);\nconst cities = ref([]);\nconst token = ref(null);\n\n//Errors\nconst nameError = ref('');\nconst descriptionError = ref('');\nconst selectedCategoryError = ref(null);\nconst selectedCityError = ref(null);\nconst priceError = ref(0);\nconst imagesError = ref('');\n\nconst filePreviews = ref([])\nconst handleFileUpload = (event, id) => {\n    const filesEvent = event.target.files; // Отримати список файлів з об'єкта event\n    if (filesEvent && filesEvent.length > 0) { // Перевірити, чи містить files файли\n        const file = filesEvent[0];\n        if (file.type === 'image/png' || file.type === 'image/jpeg') {\n            const blob = new Blob([file], { type: file.type });\n            filePreviews.value[id] = URL.createObjectURL(blob);\n            files.value[id] = file;\n            imagesError.value = '';\n        } else {\n            imagesError.value = 'Неприпустимий тип файлу!';\n            // Очистити значення у списку файлів та прев'ю\n            filePreviews.value[id] = null;\n            files.value[id] = null;\n            // Очистити поле вибору файлу\n            event.target.value = null;\n        }\n    }\n    files.value.forEach(file => {\n        console.log(file);\n    });\n}\n\n\n// Функція для завантаження даних\nasync function loadData() {\n    token.value = await getTokenFromLocalStorage();\n    user.value = getProfileFromLocalStorage();\n\n    const categoriesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/categories');\n    const citiesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/cities');\n\n    categories.value = await categoriesResponse.json();\n    cities.value = await citiesResponse.json();\n}\n\nconst findCityIdByName = (cityName) => {\n    const city = cities.value.find(city => city.name === cityName);\n    return city ? city.id : null;\n}\nconst findCategoryIdByName = (categoryName) => {\n    const category = categories.value.find(category => category.name === categoryName);\n    return category ? category.id : null;\n}\n\nconst submitForm = async () => {\n    await clearErrors();\n    const isValid = await validateForm();\n    if (isValid) {\n        const formData = new FormData();\n        formData.append('name', name.value);\n        formData.append('description', description.value);\n        formData.append('user', user.value.id);\n        formData.append('category', findCategoryIdByName(selectedCategory.value));\n        formData.append('city', findCityIdByName(selectedCity.value));\n        formData.append('price', price.value);\n        formData.append('views', views.value);\n        files.value.forEach((file, index) => {\n            formData.append(`file${index + 1}`, file);\n        });\n\n        const hasName = formData.has('name');\n        console.log('Дані з іменем \"name\" існують:', hasName); // Виведе: true\n        // Додаємо файл до formData\n        //formData.append('file', file.value);\n\n        try {\n            const response = await fetch(referal, {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: `Bearer ${token.value}`\n                }\n            });\n            if (response.ok) {\n                console.log('Ad added successfully');\n                await saveProfile();\n                router.push('/profile/user/ads');\n            } else {\n                console.error('Failed to add ad');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n}\nasync function validateForm() {\n    if (name.value.length < 10 || name.value.length > 100) {\n        nameError.value = \"Ім'я повинно містити від 10 до 100 символів!\";\n        return false;\n    }\n    if (description.value.length < 10 || description.value.length > 500) {\n        descriptionError.value = \"Опис повинен містити від 10 до 500 символів!\";\n        return false;\n    }\n    if (selectedCategory.value === null) {\n        selectedCategoryError.value = \"Виберіть категорію!\";\n        return false;\n    }\n    const isExistCategory = await isExistName(selectedCategory.value.trim(), categories.value);\n    if (!isExistCategory) {\n        selectedCategoryError.value = \"Такої категорії немає!\";\n        return false;\n    }\n\n    if (selectedCity.value === null) {\n        selectedCityError.value = \"Виберіть місто!\";\n        return false;\n    }\n    const isExistCity = await isExistName(selectedCity.value.trim(), cities.value);\n    if (!isExistCity) {\n        selectedCityError.value = \"Такого міста немає!\";\n        return false;\n    }\n\n    const priceValue = parseFloat(price.value);\n    if (isNaN(priceValue) || priceValue < 1 || priceValue > 1000000) {\n        priceError.value = \"Ціна повинна бути числом від 1 до 1000000!\";\n        return false;\n    }\n\n    if (!files.value.some(file => file !== null)) {\n        imagesError.value = \"Додайте хочаб одне фото!\";\n        return false;\n    }\n\n\n    return true;\n}\n\nasync function clearErrors() {\n    nameError.value = '';\n    descriptionError.value = '';\n    selectedCategoryError.value = '';\n    selectedCityError.value = '';\n    priceError.value = '';\n    imagesError.value = '';\n}\nasync function isExistName(name, array) {\n    for (const object of array) {\n        if (typeof object.name === 'string' && object.name === name) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n// Завантажуємо дані при монтуванні компонента\nonMounted(() => {\n    if (!isAuthenticated()) {\n        router.push('/auth/');\n    }\n    loadData();\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", {\n      onSubmit: _withModifiers(submitForm, [\"prevent\"]),\n      enctype: \"multipart/form-data\",\n      method: \"post\",\n      class: \"max-w-lg mx-auto bg-white p-8 rounded-lg shadow-md\"\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          placeholder: \"Введіть назву\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((name).value = $event)),\n          class: \"input-field\",\n          minlength: \"10\",\n          maxlength: \"100\"\n        }, null, 512), [\n          [_vModelText, name.value]\n        ]),\n        (nameError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(nameError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"textarea\", {\n          placeholder: \"Опишіть оголошення\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((description).value = $event)),\n          class: \"input-field-textarea\",\n          minlength: \"10\",\n          maxlength: \"300\"\n        }, null, 512), [\n          [_vModelText, description.value]\n        ]),\n        (descriptionError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(descriptionError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"input\", {\n          list: \"categories\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((selectedCategory).value = $event)),\n          placeholder: \"Виберіть категорію\",\n          class: \"input-field\"\n        }, null, 512), [\n          [_vModelText, selectedCategory.value]\n        ]),\n        _createElementVNode(\"datalist\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, (category) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: category.id,\n              value: category.name\n            }, _toDisplayString(category.name), 9, _hoisted_9))\n          }), 128))\n        ]),\n        (selectedCategoryError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(selectedCategoryError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_11, [\n        _withDirectives(_createElementVNode(\"input\", {\n          list: \"cities\",\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((selectedCity).value = $event)),\n          placeholder: \"Виберіть місто\",\n          class: \"input-field\"\n        }, null, 512), [\n          [_vModelText, selectedCity.value]\n        ]),\n        _createElementVNode(\"datalist\", _hoisted_12, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cities.value, (city) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: city.id,\n              value: city.name\n            }, _toDisplayString(city.name), 9, _hoisted_13))\n          }), 128))\n        ]),\n        (selectedCityError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString(selectedCityError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"number\",\n          placeholder: \"Введіть ціну\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => ((price).value = $event)),\n          min: \"0\",\n          class: \"input-field\"\n        }, null, 512), [\n          [\n            _vModelText,\n            price.value,\n            void 0,\n            { number: true }\n          ]\n        ]),\n        (priceError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _toDisplayString(priceError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (imagesError.value)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _toDisplayString(imagesError.value), 1))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[5] || (_cache[5] = $event => (handleFileUpload($event, 0))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[0] && filePreviews.value[0])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[0],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 1\"\n            }, null, 8, _hoisted_19))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_20, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[6] || (_cache[6] = $event => (handleFileUpload($event, 1))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[1] && filePreviews.value[1])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[1],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 2\"\n            }, null, 8, _hoisted_21))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_22, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[7] || (_cache[7] = $event => (handleFileUpload($event, 2))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[2] && filePreviews.value[2])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[2],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 3\"\n            }, null, 8, _hoisted_23))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_24, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[8] || (_cache[8] = $event => (handleFileUpload($event, 3))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[3] && filePreviews.value[3])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[3],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 4\"\n            }, null, 8, _hoisted_25))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_26, [\n        _createVNode(_component_nuxt_link, {\n          to: \"/profile/user/ads\",\n          class: \"red-button\"\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Назад\")\n          ]),\n          _: 1\n        }),\n        _hoisted_27\n      ])\n    ], 32)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1713884692951,
      "end": 1713884692951,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1713884692952,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/HP GAMING/IdeaProjects/Buysell/frontend/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"bg-gradient-to-b from-gray-200 to-gray-100 min-h-screen py-8 px-4\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"mb-4\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", { class: \"big-center-text\" }, \"Створіть оголошення\")\n], -1)\nconst _hoisted_3 = { class: \"mb-4\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_5 = { class: \"mb-4\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_7 = { class: \"mb-4\" }\nconst _hoisted_8 = { id: \"categories\" }\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_11 = { class: \"mb-4\" }\nconst _hoisted_12 = { id: \"cities\" }\nconst _hoisted_13 = [\"value\"]\nconst _hoisted_14 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_15 = { class: \"mb-4\" }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"text-red-500 text-xs\"\n}\nconst _hoisted_17 = {\n  key: 0,\n  class: \"text-red-500 text-xs text-center\"\n}\nconst _hoisted_18 = { class: \"mb-8\" }\nconst _hoisted_19 = [\"src\"]\nconst _hoisted_20 = { class: \"mb-8\" }\nconst _hoisted_21 = [\"src\"]\nconst _hoisted_22 = { class: \"mb-8\" }\nconst _hoisted_23 = [\"src\"]\nconst _hoisted_24 = { class: \"mb-8\" }\nconst _hoisted_25 = [\"src\"]\nconst _hoisted_26 = { class: \"flex justify-between items-center mb-8\" }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn-admin\"\n}, \"Подати оголошення\", -1)\n\nimport { ref, onMounted } from 'vue';\nimport { fetchWithToken, isAuthenticated, getProfileFromLocalStorage, getTokenFromLocalStorage, saveProfile } from '/utils/auth.js';\nimport { useRouter } from 'vue-router'\n\n// Остаточний URL для запитів\nconst referal = 'https://buy-sell-api.onrender.com/api/user/ads';\n\nconst _sfc_main = {\n  __name: 'add',\n  setup(__props) {\n\nconst router = useRouter();\n// Змінні для зберігання даних форми\nconst name = ref(\"\");\nconst description = ref(\"\");\nconst user = ref(null);\nconst selectedCategory = ref(null); // Зберігаємо лише ідентифікатор категорії\nconst selectedCity = ref(null); // Зберігаємо лише ідентифікатор міста\nconst price = ref(0);\nconst views = ref(0);\nconst files = ref([]);\nconst categories = ref([]);\nconst cities = ref([]);\nconst token = ref(null);\n\n//Errors\nconst nameError = ref('');\nconst descriptionError = ref('');\nconst selectedCategoryError = ref(null);\nconst selectedCityError = ref(null);\nconst priceError = ref(0);\nconst imagesError = ref('');\n\nconst filePreviews = ref([])\nconst handleFileUpload = (event, id) => {\n    const filesEvent = event.target.files; // Отримати список файлів з об'єкта event\n    if (filesEvent && filesEvent.length > 0) { // Перевірити, чи містить files файли\n        const file = filesEvent[0];\n        if (file.type === 'image/png' || file.type === 'image/jpeg') {\n            const blob = new Blob([file], { type: file.type });\n            filePreviews.value[id] = URL.createObjectURL(blob);\n            files.value[id] = file;\n            imagesError.value = '';\n        } else {\n            imagesError.value = 'Неприпустимий тип файлу!';\n            // Очистити значення у списку файлів та прев'ю\n            filePreviews.value[id] = null;\n            files.value[id] = null;\n            // Очистити поле вибору файлу\n            event.target.value = null;\n        }\n    }\n    files.value.forEach(file => {\n        console.log(file);\n    });\n}\n\n\n// Функція для завантаження даних\nasync function loadData() {\n    token.value = await getTokenFromLocalStorage();\n    user.value = getProfileFromLocalStorage();\n\n    const categoriesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/categories');\n    const citiesResponse = await fetchWithToken('https://buy-sell-api.onrender.com/api/user/ads/cities');\n\n    categories.value = await categoriesResponse.json();\n    cities.value = await citiesResponse.json();\n}\n\nconst findCityIdByName = (cityName) => {\n    const city = cities.value.find(city => city.name === cityName);\n    return city ? city.id : null;\n}\nconst findCategoryIdByName = (categoryName) => {\n    const category = categories.value.find(category => category.name === categoryName);\n    return category ? category.id : null;\n}\n\nconst submitForm = async () => {\n    await clearErrors();\n    const isValid = await validateForm();\n    if (isValid) {\n        const formData = new FormData();\n        formData.append('name', name.value);\n        formData.append('description', description.value);\n        formData.append('user', user.value.id);\n        formData.append('category', findCategoryIdByName(selectedCategory.value));\n        formData.append('city', findCityIdByName(selectedCity.value));\n        formData.append('price', price.value);\n        formData.append('views', views.value);\n        files.value.forEach((file, index) => {\n            formData.append(`file${index + 1}`, file);\n        });\n\n        const hasName = formData.has('name');\n        console.log('Дані з іменем \"name\" існують:', hasName); // Виведе: true\n        // Додаємо файл до formData\n        //formData.append('file', file.value);\n\n        try {\n            const response = await fetch(referal, {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: `Bearer ${token.value}`\n                }\n            });\n            if (response.ok) {\n                console.log('Ad added successfully');\n                await saveProfile();\n                router.push('/profile/user/ads');\n            } else {\n                console.error('Failed to add ad');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n}\nasync function validateForm() {\n    if (name.value.length < 10 || name.value.length > 100) {\n        nameError.value = \"Ім'я повинно містити від 10 до 100 символів!\";\n        return false;\n    }\n    if (description.value.length < 10 || description.value.length > 500) {\n        descriptionError.value = \"Опис повинен містити від 10 до 500 символів!\";\n        return false;\n    }\n    if (selectedCategory.value === null) {\n        selectedCategoryError.value = \"Виберіть категорію!\";\n        return false;\n    }\n    const isExistCategory = await isExistName(selectedCategory.value.trim(), categories.value);\n    if (!isExistCategory) {\n        selectedCategoryError.value = \"Такої категорії немає!\";\n        return false;\n    }\n\n    if (selectedCity.value === null) {\n        selectedCityError.value = \"Виберіть місто!\";\n        return false;\n    }\n    const isExistCity = await isExistName(selectedCity.value.trim(), cities.value);\n    if (!isExistCity) {\n        selectedCityError.value = \"Такого міста немає!\";\n        return false;\n    }\n\n    const priceValue = parseFloat(price.value);\n    if (isNaN(priceValue) || priceValue < 1 || priceValue > 1000000) {\n        priceError.value = \"Ціна повинна бути числом від 1 до 1000000!\";\n        return false;\n    }\n\n    if (!files.value.some(file => file !== null)) {\n        imagesError.value = \"Додайте хочаб одне фото!\";\n        return false;\n    }\n\n\n    return true;\n}\n\nasync function clearErrors() {\n    nameError.value = '';\n    descriptionError.value = '';\n    selectedCategoryError.value = '';\n    selectedCityError.value = '';\n    priceError.value = '';\n    imagesError.value = '';\n}\nasync function isExistName(name, array) {\n    for (const object of array) {\n        if (typeof object.name === 'string' && object.name === name) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n// Завантажуємо дані при монтуванні компонента\nonMounted(() => {\n    if (!isAuthenticated()) {\n        router.push('/auth/');\n    }\n    loadData();\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = __nuxt_component_0\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", {\n      onSubmit: _withModifiers(submitForm, [\"prevent\"]),\n      enctype: \"multipart/form-data\",\n      method: \"post\",\n      class: \"max-w-lg mx-auto bg-white p-8 rounded-lg shadow-md\"\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          placeholder: \"Введіть назву\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((name).value = $event)),\n          class: \"input-field\",\n          minlength: \"10\",\n          maxlength: \"100\"\n        }, null, 512), [\n          [_vModelText, name.value]\n        ]),\n        (nameError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(nameError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"textarea\", {\n          placeholder: \"Опишіть оголошення\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((description).value = $event)),\n          class: \"input-field-textarea\",\n          minlength: \"10\",\n          maxlength: \"300\"\n        }, null, 512), [\n          [_vModelText, description.value]\n        ]),\n        (descriptionError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(descriptionError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"input\", {\n          list: \"categories\",\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((selectedCategory).value = $event)),\n          placeholder: \"Виберіть категорію\",\n          class: \"input-field\"\n        }, null, 512), [\n          [_vModelText, selectedCategory.value]\n        ]),\n        _createElementVNode(\"datalist\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(categories.value, (category) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: category.id,\n              value: category.name\n            }, _toDisplayString(category.name), 9, _hoisted_9))\n          }), 128))\n        ]),\n        (selectedCategoryError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(selectedCategoryError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_11, [\n        _withDirectives(_createElementVNode(\"input\", {\n          list: \"cities\",\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((selectedCity).value = $event)),\n          placeholder: \"Виберіть місто\",\n          class: \"input-field\"\n        }, null, 512), [\n          [_vModelText, selectedCity.value]\n        ]),\n        _createElementVNode(\"datalist\", _hoisted_12, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cities.value, (city) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: city.id,\n              value: city.name\n            }, _toDisplayString(city.name), 9, _hoisted_13))\n          }), 128))\n        ]),\n        (selectedCityError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString(selectedCityError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"number\",\n          placeholder: \"Введіть ціну\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => ((price).value = $event)),\n          min: \"0\",\n          class: \"input-field\"\n        }, null, 512), [\n          [\n            _vModelText,\n            price.value,\n            void 0,\n            { number: true }\n          ]\n        ]),\n        (priceError.value)\n          ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _toDisplayString(priceError.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (imagesError.value)\n        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _toDisplayString(imagesError.value), 1))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[5] || (_cache[5] = $event => (handleFileUpload($event, 0))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[0] && filePreviews.value[0])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[0],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 1\"\n            }, null, 8, _hoisted_19))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_20, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[6] || (_cache[6] = $event => (handleFileUpload($event, 1))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[1] && filePreviews.value[1])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[1],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 2\"\n            }, null, 8, _hoisted_21))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_22, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[7] || (_cache[7] = $event => (handleFileUpload($event, 2))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[2] && filePreviews.value[2])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[2],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 3\"\n            }, null, 8, _hoisted_23))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_24, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          onChange: _cache[8] || (_cache[8] = $event => (handleFileUpload($event, 3))),\n          accept: \"image/png, image/jpeg\",\n          class: \"input-field\"\n        }, null, 32),\n        (files.value[3] && filePreviews.value[3])\n          ? (_openBlock(), _createElementBlock(\"img\", {\n              key: 0,\n              src: filePreviews.value[3],\n              class: \"image rounded-center\",\n              alt: \"Додайте фото 4\"\n            }, null, 8, _hoisted_25))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_26, [\n        _createVNode(_component_nuxt_link, {\n          to: \"/profile/user/ads\",\n          class: \"red-button\"\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Назад\")\n          ]),\n          _: 1\n        }),\n        _hoisted_27\n      ])\n    ], 32)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1713884692955,
      "end": 1713884692955,
      "order": "normal"
    }
  ]
}
